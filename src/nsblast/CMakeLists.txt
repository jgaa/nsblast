project(nsblast VERSION ${NSBLAST_VERSION} LANGUAGES CXX)

message(STATUS "Configuring ${PROJECT_NAME} ${VUDNS_VERSION}")

add_executable(${PROJECT_NAME}
    main.cpp
    )

target_include_directories(${PROJECT_NAME} PUBLIC
    $<BUILD_INTERFACE:${Boost_INCLUDE_DIR}>
    $<BUILD_INTERFACE:${NSBLAST_ROOT}/include>
    $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
    $<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}>
    PRIVATE ${CMAKE_BINARY_DIR}/generated-include/
    #$<INSTALL_INTERFACE:include>
    PRIVATE src)

add_dependencies(${PROJECT_NAME} logfault nsblastlib)

target_link_libraries(${PROJECT_NAME} PRIVATE
    nsblastlib
    yahat
    ${ROCKSDB_LIBRARIES}
    ${Boost_LIBRARIES}
    ${ZLIB_LIBRARIES}
    ${BZIP2_LIBRARIES}
    ${OPENSSL_LIBRARIES}
    # TODO: Add macros and check for these libraries
    lz4
    snappy
    ${CMAKE_THREAD_LIBS_INIT}
    )

install(TARGETS ${PROJECT_NAME} EXPORT ${PROJECT_NAME}App
    TARGETS ${PROJECT_NAME}
    EXPORT "${PROJECT_NAME}Targets"
    COMPONENT ${PROJECT_NAME} # must be here, not any line lower

    ARCHIVE  DESTINATION ${CMAKE_INSTALL_LIBDIR}
    LIBRARY  DESTINATION ${CMAKE_INSTALL_LIBDIR}
    RUNTIME  DESTINATION ${CMAKE_INSTALL_BINDIR}
)

SET(CPACK_GENERATOR "DEB")
set(CPACK_PACKAGE_CONTACT "jgaa@jgaa.com")
set(CPACK_DEBIAN_PACKAGE_MAINTAINER "Jarle Aase")
set(CPACK_RESOURCE_FILE_LICENSE "${NSBLAST_ROOT}/LICENSE")
set(CPACK_RESOURCE_FILE_README "${NSBLAST_ROOT}/README.md")
set(CPACK_DEBIAN_FILE_NAME DEB-DEFAULT)
set(CPACK_PACKAGE_VERSION_MAJOR ${PROJECT_VERSION_MAJOR})
set(CPACK_PACKAGE_VERSION_MINOR ${PROJECT_VERSION_MINOR})
set(CPACK_PACKAGE_VERSION_PATCH ${PROJECT_VERSION_PATCH})
set(CPACK_PACKAGE_DESCRIPTION_SUMMARY "Massively scalable authoritative DNS Server"
    CACHE STRING "Package description for the package metadata"
)
SET (CPACK_DEBIAN_PACKAGE_DESCRIPTION
    "SaaS ready authoritative DNS server that is simple to deploy as a vertically scalable DNS cluster for anything from hosting your own domain to large scale cloud use-cases.")
set(CPACK_PACKAGE_VENDOR "The Last Viking LTD")
set(CPACK_DEB_COMPONENT_INSTALL YES)
set(CPACK_COMPONENTS_GROUPING ALL_COMPONENTS_IN_ONE)
set(CPACK_DEBIAN_PACKAGE_SECTION net)
set(CPACK_PACKAGE_NAME "${PROJECT_NAME}"
    CACHE STRING "The resulting package name"
)
set(CPACK_DEBIAN_PACKAGE_SHLIBDEPS YES)
set(
    CPACK_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS
    OWNER_READ OWNER_WRITE OWNER_EXECUTE
    GROUP_READ GROUP_EXECUTE
    WORLD_READ WORLD_EXECUTE
)

INCLUDE(CPack)

set_target_properties(${PROJECT_NAME}
    PROPERTIES
    IMPORTED_LOCATION "external-projects/src/rocksdb-build/librocksdb.a"
    ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/lib"
    LIBRARY_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/lib"
    RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin"
)

target_compile_definitions(${PROJECT_NAME} PUBLIC -DBOOST_COROUTINES_NO_DEPRECATION_WARNING=1)
target_compile_definitions(${PROJECT_NAME} PUBLIC -DBOOST_COROUTINE_NO_DEPRECATION_WARNING=1)
target_compile_definitions(${PROJECT_NAME} PUBLIC -DAPP_VERSION=\"${VUDNS_VERSION}\")
target_compile_definitions(${PROJECT_NAME} PRIVATE ${VALDGRIND_ARGS})
